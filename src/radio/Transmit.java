/*
 * Transmit.java
 *
 * Created on September 19, 2007, 5:26 PM
 *
 * Copyright (C) 2006, 2007 by John Melton, G0ORX/N6LYT
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * The author can be reached by email at
 *
 * john.melton@sun.com
 *
 */

package radio;

public class Transmit extends javax.swing.JPanel implements TransmitInterface {
    
    /** Creates new form Transmit */
    public Transmit() {
        initComponents();
    }
    
    public void addListener(TransmitListener transmitListener) {
        this.transmitListener=transmitListener;
    }
    
    public void setMox(boolean state) {
        moxButton.setForeground((state?java.awt.Color.RED:java.awt.Color.BLACK));
    }
    
    public void setTune(boolean state) {
        tuneButton.setForeground((state?java.awt.Color.RED:java.awt.Color.BLACK));
    }
    
    public void enableMox(boolean state) {
        moxButton.setEnabled(state);
    }
    
    public void enableTune(boolean state) {
        tuneButton.setEnabled(state);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moxButton = new javax.swing.JButton();
        tuneButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        moxButton.setBackground(new java.awt.Color(153, 153, 153));
        moxButton.setText("MOX");
        moxButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        moxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moxButtonActionPerformed(evt);
            }
        });
        add(moxButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 30));

        tuneButton.setBackground(new java.awt.Color(153, 153, 153));
        tuneButton.setText("Tune");
        tuneButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tuneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tuneButtonActionPerformed(evt);
            }
        });
        add(tuneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 60, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void tuneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tuneButtonActionPerformed
        transmitListener.tuneSelected();
}//GEN-LAST:event_tuneButtonActionPerformed

    private void moxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moxButtonActionPerformed

        transmitListener.moxSelected();
    }//GEN-LAST:event_moxButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton moxButton;
    private javax.swing.JButton tuneButton;
    // End of variables declaration//GEN-END:variables
    
    private TransmitListener transmitListener;
}
