/*
 * RxGain.java
 *
 * Created on January 21, 2008, 8:10 AM
 *
 * Copyright (C) 2006, 2007 by John Melton, G0ORX/N6LYT
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * The author can be reached by email at
 *
 * john.melton@sun.com
 *
 */

package radio;

/**
 * 
 *  RxGain
 */
public class RxGain extends javax.swing.JPanel implements RxGainInterface {
    
    /**
     * Creates new form RxGain
     */
    public RxGain() {
        initComponents();
    }
    
    public void addListener(RxGainListener rxGainListener) {
        this.rxGainListener=rxGainListener;
    }
    
    public void setIfGain(int gain) {
        ifGain.setText(Integer.toString(gain));
        ifGainSlider.setValue(gain);
    }

    public void setAfGain(int gain) {
        afGain.setText(Integer.toString(gain));
        afGainSlider.setValue(gain);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        afGainSlider = new javax.swing.JSlider();
        afGain = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ifGainSlider = new javax.swing.JSlider();
        ifGain = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 153));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Output");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        afGainSlider.setBackground(new java.awt.Color(153, 153, 153));
        afGainSlider.setMajorTickSpacing(25);
        afGainSlider.setMinorTickSpacing(5);
        afGainSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                afGainSliderStateChanged(evt);
            }
        });
        add(afGainSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 110, -1));

        afGain.setText("jTextField1");
        afGain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afGainActionPerformed(evt);
            }
        });
        add(afGain, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 40, -1));

        jLabel2.setText("Input");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        ifGainSlider.setBackground(new java.awt.Color(153, 153, 153));
        ifGainSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ifGainSliderStateChanged(evt);
            }
        });
        add(ifGainSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 110, -1));

        ifGain.setText("jTextField1");
        ifGain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ifGainActionPerformed(evt);
            }
        });
        add(ifGain, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 40, -1));

        jLabel3.setText("DttSP RX Gain");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void ifGainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ifGainActionPerformed
        int gain=Integer.parseInt(ifGain.getText());
        ifGainSlider.setValue(gain);
        rxGainListener.rxIfGainChanged(gain);
    }//GEN-LAST:event_ifGainActionPerformed

    private void ifGainSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ifGainSliderStateChanged
        int gain=ifGainSlider.getValue();
        ifGain.setText(Integer.toString(gain));
        rxGainListener.rxIfGainChanged(gain);
    }//GEN-LAST:event_ifGainSliderStateChanged

    private void afGainSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_afGainSliderStateChanged
        int gain=afGainSlider.getValue();
        afGain.setText(Integer.toString(gain));
        rxGainListener.rxAfGainChanged(gain);
    }//GEN-LAST:event_afGainSliderStateChanged

    private void afGainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afGainActionPerformed
        int gain=Integer.parseInt(afGain.getText());
        afGainSlider.setValue(gain);
        rxGainListener.rxAfGainChanged(gain);
    }//GEN-LAST:event_afGainActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField afGain;
    private javax.swing.JSlider afGainSlider;
    private javax.swing.JTextField ifGain;
    private javax.swing.JSlider ifGainSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
    
    RxGainListener rxGainListener;
}
