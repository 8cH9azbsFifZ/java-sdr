/*
 * AGCDialog.java
 *
 * Created on 12 May 2008, 10:37
 */

package radio;

import javax.swing.SpinnerNumberModel;
        
/**
 *
 * @author  jm57878
 */
public class AGCDialog extends javax.swing.JDialog {
    
    /** Creates new form AGCDialog */
    public AGCDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("java-sdr: AGC Configuration");
    }
    
    public void setup(AGCListener listener) {
        this.listener=listener;
    }
 
    public void setAgc(AGCs agc) {
        switch(agc) {
            case FIXED:
            case SLOW:
            case MEDIUM:
            case FAST:
            case OFF:
                break;
            case CUSTOM:
                break;
        }
    }
    
    public void setAgcSlope(int slope) {
        this.slope.getModel().setValue(slope);
    }
    
    public void setAgcMaxGain(int gain) {
        this.maxGain.getModel().setValue(gain);
    }
    
    public void setAgcAttack(int attack) {
        this.attack.getModel().setValue(attack);
    }
    
    public void setAgcDecay(int decay) {
        this.decay.getModel().setValue(decay);
    }
    
    public void setAgcHang(int hang) {
        this.hang.getModel().setValue(hang);
    }
    
    public void setAgcFixedGain(int gain) {
        this.fixedGain.getModel().setValue(gain);
    }
    
    public void setAgcHangThreshold(int threshold) {
        this.hangThreshold.setValue(threshold);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        slope = new javax.swing.JSpinner();
        maxGain = new javax.swing.JSpinner();
        attack = new javax.swing.JSpinner();
        decay = new javax.swing.JSpinner();
        hang = new javax.swing.JSpinner();
        hangThreshold = new javax.swing.JSlider();
        fixedGain = new javax.swing.JSpinner();
        close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Slope (dB):");

        jLabel2.setText("Max Gain (dB):");

        jLabel3.setText("Attack (ms):");

        jLabel4.setText("Decay (ms):");

        jLabel5.setText("Hang (ms):");

        jLabel6.setText("Hang Threshold:");

        jLabel7.setText("Fixed Gain (dB):");

        slope.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        slope.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slopeStateChanged(evt);
            }
        });

        maxGain.setModel(new javax.swing.SpinnerNumberModel(60, -20, 120, 1));
        maxGain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxGainStateChanged(evt);
            }
        });

        attack.setModel(new javax.swing.SpinnerNumberModel(2, 1, 10, 1));
        attack.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                attackStateChanged(evt);
            }
        });

        decay.setModel(new javax.swing.SpinnerNumberModel(2000, 10, 5000, 1));
        decay.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                decayStateChanged(evt);
            }
        });

        hang.setModel(new javax.swing.SpinnerNumberModel(750, 10, 5000, 1));
        hang.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hangStateChanged(evt);
            }
        });

        hangThreshold.setMajorTickSpacing(10);
        hangThreshold.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hangThresholdStateChanged(evt);
            }
        });

        fixedGain.setModel(new javax.swing.SpinnerNumberModel(20, -20, 120, 1));
        fixedGain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fixedGainStateChanged(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(maxGain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(slope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(decay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(attack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(fixedGain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hangThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(close)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(slope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(maxGain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(attack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(decay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(hang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hangThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(fixedGain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(close)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_closeActionPerformed

    private void slopeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slopeStateChanged
        SpinnerNumberModel model=(SpinnerNumberModel)slope.getModel();
        Integer value=(Integer)slope.getValue();
        listener.setAgcSlope(value.intValue());
    }//GEN-LAST:event_slopeStateChanged

    private void maxGainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxGainStateChanged
        SpinnerNumberModel model=(SpinnerNumberModel)maxGain.getModel();
        Integer value=(Integer)maxGain.getValue();
        listener.setAgcMaxGain(value.intValue());
    }//GEN-LAST:event_maxGainStateChanged

    private void attackStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_attackStateChanged
        SpinnerNumberModel model=(SpinnerNumberModel)attack.getModel();
        Integer value=(Integer)attack.getValue();
        listener.setAgcAttack(value.intValue());
    }//GEN-LAST:event_attackStateChanged

    private void decayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_decayStateChanged
        SpinnerNumberModel model=(SpinnerNumberModel)decay.getModel();
        Integer value=(Integer)decay.getValue();
        listener.setAgcDecay(value.intValue());
    }//GEN-LAST:event_decayStateChanged

    private void hangStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hangStateChanged
        SpinnerNumberModel model=(SpinnerNumberModel)hang.getModel();
        Integer value=(Integer)hang.getValue();
        listener.setAgcHang(value.intValue());
    }//GEN-LAST:event_hangStateChanged

    private void hangThresholdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hangThresholdStateChanged
        listener.setAgcHangThreshold(hangThreshold.getValue());
    }//GEN-LAST:event_hangThresholdStateChanged

    private void fixedGainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fixedGainStateChanged
        SpinnerNumberModel model=(SpinnerNumberModel)fixedGain.getModel();
        Integer value=(Integer)fixedGain.getValue();
        listener.setAgcFixedGain(value.intValue());
    }//GEN-LAST:event_fixedGainStateChanged
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner attack;
    private javax.swing.JButton close;
    private javax.swing.JSpinner decay;
    private javax.swing.JSpinner fixedGain;
    private javax.swing.JSpinner hang;
    private javax.swing.JSlider hangThreshold;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSpinner maxGain;
    private javax.swing.JSpinner slope;
    // End of variables declaration//GEN-END:variables
 
    private AGCListener listener;
}
